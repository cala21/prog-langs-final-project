<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="engr2-27-232-dhcp.int.colorado.edu" name="Lab1Spec" tests="22" errors="0" failures="1" time="0.085">
                <properties> <property name="jline.esc.timeout" value="0"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="sun.boot.library.path" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib"/><property name="java.vm.version" value="24.65-b04"/><property name="gopherProxySet" value="false"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="java.vendor.url" value="http://java.oracle.com/"/><property name="path.separator" value=":"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="file.encoding.pkg" value="sun.io"/><property name="user.country" value="US"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="sun.os.patch.level" value="unknown"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="user.dir" value="/Users/dillondrenzek/School/prog-langs/lab1"/><property name="java.runtime.version" value="1.7.0_67-b01"/><property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/><property name="java.endorsed.dirs" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/endorsed"/><property name="os.arch" value="x86_64"/><property name="java.io.tmpdir" value="/var/folders/r6/_s7q3j5n2vn4jg1lwtwwrvrm0000gn/T/"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="os.name" value="Mac OS X"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="java.library.path" value="/Users/dillondrenzek/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.class.version" value="51.0"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="os.version" value="10.9.4"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="user.home" value="/Users/dillondrenzek"/><property name="user.timezone" value="America/Denver"/><property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/><property name="file.encoding" value="UTF-8"/><property name="java.specification.version" value="1.7"/><property name="java.class.path" value="/usr/local/Cellar/sbt/0.13.5/libexec/sbt-launch.jar"/><property name="user.name" value="dillondrenzek"/><property name="jline.shutdownhook" value="false"/><property name="java.vm.specification.version" value="1.7"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/0.13.5/libexec/sbt-launch.jar test"/><property name="java.home" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home"/><property name="sun.arch.data.model" value="64"/><property name="user.language" value="en"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/><property name="java.vm.info" value="mixed mode"/><property name="java.version" value="1.7.0_67"/><property name="java.ext.dirs" value="/Users/dillondrenzek/Library/Java/Extensions:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/><property name="sun.boot.class.path" value="/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/resources.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/rt.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/sunrsasign.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jsse.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jce.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/charsets.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/lib/jfr.jar:/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/classes"/><property name="java.vendor" value="Oracle Corporation"/><property name="file.separator" value="/"/><property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="sun.cpu.endian" value="little"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.isalist" value=""/>
        </properties>
                <testcase classname="Lab1Spec" name="abs should evaluate to the absolute value of the argument" time="0.014"> 
                    </testcase><testcase classname="Lab1Spec" name="xor should evaluate to the exclusive or of the arguments" time="0.0"> 
                    </testcase><testcase classname="Lab1Spec" name="repeat should evaluate to repeated concatenation of a string" time="0.001"> 
                    </testcase><testcase classname="Lab1Spec" name="repeat should evaluate to an empty string when repeated zero times" time="0.0"> 
                    </testcase><testcase classname="Lab1Spec" name="repeat should throw an exception when a negative number of repetitions is expected" time="0.001"> 
                    </testcase><testcase classname="Lab1Spec" name="sqrtStep should evaluate to one iteration of Newton's method" time="0.001"> 
                    </testcase><testcase classname="Lab1Spec" name="sqrtN should perform several iterations of sqrtStep" time="0.0"> 
                    </testcase><testcase classname="Lab1Spec" name="sqrtN should evaluate to x0 if n is zero" time="0.0"> 
                    </testcase><testcase classname="Lab1Spec" name="sqrtErr should perform iterations until the error is within epsilon" time="0.0"> 
                    </testcase><testcase classname="Lab1Spec" name="sqrtN should throw an exception when n is negative" time="0.001"> 
                    </testcase><testcase classname="Lab1Spec" name="sqrtErr should throw an exception when using a non-positive epsilon" time="0.001"> 
                    </testcase><testcase classname="Lab1Spec" name="repOk should ensure that a SearchTree is properly ordered" time="0.0"> 
                    </testcase><testcase classname="Lab1Spec" name="insert should insert numbers as leaves in SearchTrees at the proper position" time="0.009"> <failure message="Node(Empty,2,Empty) did not equal Node(Empty,2,Node(Empty,2,Empty))" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: Node(Empty,2,Empty) did not equal Node(Empty,2,Node(Empty,2,Empty))
	at org.scalatest.Assertions$class.newAssertionFailedException(Assertions.scala:468)
	at org.scalatest.FlatSpec.newAssertionFailedException(FlatSpec.scala:1683)
	at org.scalatest.Assertions$AssertionsHelper.macroAssert(Assertions.scala:386)
	at Lab1Spec$$anonfun$13.apply$mcV$sp(Lab1Spec.scala:127)
	at Lab1Spec$$anonfun$13.apply(Lab1Spec.scala:125)
	at Lab1Spec$$anonfun$13.apply(Lab1Spec.scala:125)
	at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)
	at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)
	at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FlatSpecLike$$anon$1.apply(FlatSpecLike.scala:1636)
	at org.scalatest.Suite$class.withFixture(Suite.scala:1121)
	at org.scalatest.FlatSpec.withFixture(FlatSpec.scala:1683)
	at org.scalatest.FlatSpecLike$class.invokeWithFixture$1(FlatSpecLike.scala:1633)
	at org.scalatest.FlatSpecLike$$anonfun$runTest$1.apply(FlatSpecLike.scala:1645)
	at org.scalatest.FlatSpecLike$$anonfun$runTest$1.apply(FlatSpecLike.scala:1645)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)
	at org.scalatest.FlatSpecLike$class.runTest(FlatSpecLike.scala:1645)
	at org.scalatest.FlatSpec.runTest(FlatSpec.scala:1683)
	at org.scalatest.FlatSpecLike$$anonfun$runTests$1.apply(FlatSpecLike.scala:1703)
	at org.scalatest.FlatSpecLike$$anonfun$runTests$1.apply(FlatSpecLike.scala:1703)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:390)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:427)
	at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)
	at scala.collection.immutable.List.foreach(List.scala:318)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)
	at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)
	at org.scalatest.FlatSpecLike$class.runTests(FlatSpecLike.scala:1703)
	at org.scalatest.FlatSpec.runTests(FlatSpec.scala:1683)
	at org.scalatest.Suite$class.run(Suite.scala:1423)
	at org.scalatest.FlatSpec.org$scalatest$FlatSpecLike$$super$run(FlatSpec.scala:1683)
	at org.scalatest.FlatSpecLike$$anonfun$run$1.apply(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpecLike$$anonfun$run$1.apply(FlatSpecLike.scala:1749)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:545)
	at org.scalatest.FlatSpecLike$class.run(FlatSpecLike.scala:1749)
	at org.scalatest.FlatSpec.run(FlatSpec.scala:1683)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:444)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:651)
	at sbt.TestRunner.runTest$1(TestFramework.scala:84)
	at sbt.TestRunner.run(TestFramework.scala:94)
	at sbt.TestFramework$$anon$2$$anonfun$$init$$1$$anonfun$apply$8.apply(TestFramework.scala:219)
	at sbt.TestFramework$$anon$2$$anonfun$$init$$1$$anonfun$apply$8.apply(TestFramework.scala:219)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:207)
	at sbt.TestFramework$$anon$2$$anonfun$$init$$1.apply(TestFramework.scala:219)
	at sbt.TestFramework$$anon$2$$anonfun$$init$$1.apply(TestFramework.scala:219)
	at sbt.TestFunction.apply(TestFramework.scala:224)
	at sbt.Tests$.sbt$Tests$$processRunnable$1(Tests.scala:211)
	at sbt.Tests$$anonfun$makeSerial$1.apply(Tests.scala:217)
	at sbt.Tests$$anonfun$makeSerial$1.apply(Tests.scala:217)
	at sbt.std.Transform$$anon$3$$anonfun$apply$2.apply(System.scala:45)
	at sbt.std.Transform$$anon$3$$anonfun$apply$2.apply(System.scala:45)
	at sbt.std.Transform$$anon$4.work(System.scala:64)
	at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:237)
	at sbt.Execute$$anonfun$submit$1$$anonfun$apply$1.apply(Execute.scala:237)
	at sbt.ErrorHandling$.wideConvert(ErrorHandling.scala:18)
	at sbt.Execute.work(Execute.scala:244)
	at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:237)
	at sbt.Execute$$anonfun$submit$1.apply(Execute.scala:237)
	at sbt.ConcurrentRestrictions$$anon$4$$anonfun$1.apply(ConcurrentRestrictions.scala:160)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:30)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
	at java.util.concurrent.FutureTask.run(FutureTask.java:262)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at java.lang.Thread.run(Thread.java:745)
</failure>
                    </testcase><testcase classname="Lab1Spec" name="deleteMin should remove the smallest value from a tree, and provide the resulting tree" time="0.0"> 
                    </testcase><testcase classname="Lab1Spec" name="delete should remove a given value from a tree, if present" time="0.0"> 
                    </testcase><testcase classname="Lab1Spec" name="insert should produce trees that satisfy repOk" time="0.001"> 
                    </testcase><testcase classname="Lab1Spec" name="insert-delete should produce tress that satisfy repOk" time="0.002"> 
                    </testcase><testcase classname="Lab1Spec" name="eval+ should perform addition" time="0.041"> 
                    </testcase><testcase classname="Lab1Spec" name="eval- should perform subtraction" time="0.003"> 
                    </testcase><testcase classname="Lab1Spec" name="eval* should perform multiplication" time="0.002"> 
                    </testcase><testcase classname="Lab1Spec" name="eval/ should perform division" time="0.002"> 
                    </testcase><testcase classname="Lab1Spec" name="eval/0 should division by 0 should yield Infinity" time="0.006"> 
                    </testcase>
                <system-out></system-out>
                <system-err></system-err>
                </testsuite>